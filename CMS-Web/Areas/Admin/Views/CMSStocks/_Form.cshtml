
@model CMS_DTO.CMSOrder.CMS_OrderAdminModels
@using CMS_Common
@{
    Html.EnableUnobtrusiveJavaScript(true);
    var _ID = Model.Id;
}
@Html.HiddenFor(model => model.Id)
<style>
    * {
        box-sizing: border-box;
    }

    body {
        font: 16px Arial;
    }

    .autocomplete {
        /*the container must be positioned relative:*/
        position: relative;
        display: inline-block;
    }

    input {
        border: 1px solid transparent;
        background-color: #f1f1f1;
        padding: 10px;
        font-size: 16px;
    }

        input[type=text] {
            background-color: #f1f1f1;
            width: 100%;
        }

        input[type=submit] {
            background-color: DodgerBlue;
            color: #fff;
            cursor: pointer;
        }

    .autocomplete-items {
        position: absolute;
        border: 1px solid #d4d4d4;
        border-bottom: none;
        border-top: none;
        z-index: 99;
        /*position the autocomplete items to be the same width as the container:*/
        top: 100%;
        left: 0;
        right: 0;
    }

        .autocomplete-items div {
            padding: 10px;
            cursor: pointer;
            background-color: #fff;
            border-bottom: 1px solid #d4d4d4;
        }

            .autocomplete-items div:hover {
                /*when hovering an item:*/
                background-color: #e9e9e9;
            }

    .autocomplete-active {
        /*when navigating through the items using the arrow keys:*/
        background-color: DodgerBlue !important;
        color: #ffffff;
    }

    .list-group-item:hover {
        background-color: #e9e9e9;
        cursor: pointer;
    }
</style>
<div class="row form-horizontal form-label-left" style="margin-bottom:15px;">
    <fieldset>
        <legend>Thông tin đơn hàng:</legend>
        <form name="OrderFrm">
            <div class="form-group">
                <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight fontLighter">Tên sản phẩm</label>
                <div class="col-md-3 col-sm-3 col-xs-12">
                    <input type="text" placeholder="Tên sản phẩm" ng-required="true" autocomplete="off" ng-model="productName" name="productName" ng-keyup="complete(productName)" class="form-control" />
                    <input type="hidden" ng-model="ProductId" />
                    <ul class="list-group">
                        <li class="list-group-item" ng-repeat="productdata in filterProduct" ng-click="fillTextbox(productdata)">{{productdata.ProductName}}</li>
                    </ul>
                </div>

                <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight fontLighter">Số lượng</label>
                <div class="col-md-2 col-sm-2 col-xs-12">
                    <input type="text" class="form-control" restrict-to="[0-9]" placeholder="Số lượng" ng-model="Qty" ng-init="Qty = 1" autocomplete="off" id="txtQty" />
                </div>
                <label class="control-label col-md-1 col-sm-1 col-xs-12 lineHeight fontLighter">Giá</label>
                <div class="col-md-2 col-sm-2 col-xs-12">
                    <input type="text" class="form-control" restrict-to="[0-9.]" placeholder="Giá" ng-model="ProductPrice" ng-init="ProductPrice = 0" autocomplete="off" id="txtPrice" />
                </div>


            </div>

            <div class="form-group">
                <label class="control-label col-md-2 col-sm-2 col-xs-12 fontLighter">Mô tả</label>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    <textarea class="form-control" ng-required="true" placeholder="Mô tả đơn hàng" ng-model="Description" name="Description"></textarea>
                </div>

                <div class="col-md-2 col-sm-2 col-xs-12">
                    <button type="button" class="btn btn-primary" ng-click="fnAddItem();" ng-disabled="OrderFrm.productName.$invalid && OrderFrm.Description.$invalid">Thêm</button>
                </div>
            </div>
        </form>
        <div class="form-group">
            <table class="table table-striped table-bordered table-hover dt-responsive" id="sample_4">
                <thead>
                    <tr>
                        <th class="text-center">
                            Tên sản phẩm
                        </th>
                        <th>Mô tả</th>
                        <th class="text-center"> Giá </th>
                        <th class="text-center">Số lượng</th>
                        <th class="text-center"> Thành tiền </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="odd gradeX" ng-repeat="item in Items">
                        <td class="text-center">
                            {{item.ProductName}}
                        </td>
                        <td class="text-left" ng-bind="item.Description"></td>
                        <td class="text-center"> {{item.Price | currency :"": 0}} đ</td>
                        <td class="text-center">
                            {{item.Quantity}}
                        </td>
                        <td class="text-center">{{item.TotalPrice | currency :"": 0}} đ</td>
                        <td class="text-center"><a href="" ng-click="deleteItem(item)">Xóa</a></td>
                    </tr>
                </tbody>
                <tfoot ng-if="Items.length > 0">
                    <tr>
                        <td class="text-right" colspan="5">SubTotal</td>
                        <td class="text-center">{{SubTotal | currency :"": 0}} đ</td>
                    </tr>
                    <tr>
                        <td class="text-right" colspan="5">Tổng tiền</td>
                        <td class="text-center">{{TotalPrice | currency :"": 0}} đ</td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </fieldset>
</div>
<script src="@Url.Content("~/Scripts/InputCustom.js")"></script>
<script type="text/javascript">
    $(document).ready(function () {
    })
    var app = angular.module("appOrder", []);
    app.directive('restrictTo', function () {
        return {
            restrict: 'A',
            link: function (scope, element, attrs) {
                var re = RegExp(attrs.restrictTo);
                var exclude = /Backspace|Enter|Tab|Delete|Del|ArrowUp|Up|ArrowDown|Down|ArrowLeft|Left|ArrowRight|Right/;

                element[0].addEventListener('keypress', function (event) {
                    if (!exclude.test(event.key) && !re.test(event.key)) {
                        event.preventDefault();
                    }
                });
            }
        }
    });
    app.controller("StockFrmCtrl", ["$scope", "$http", "$window", function ($scope, $http, $window) {
        $scope.productList = JSON.parse('@Html.Raw(Json.Encode(Model.Items))');
        $scope.complete = function (string) {
            var output = [];
            if (string == undefined || string === "")
            {
                output = null;
            }
            else {
                angular.forEach($scope.productList, function (product) {
                    if (product.ProductName.toLowerCase().indexOf(string.toLowerCase()) >= 0) {
                        output.push(product);
                    }
                });
            }
            $scope.filterProduct = output;
        }

        $scope.fillTextbox = function (obj) {
            $scope.productName = obj.ProductName;
            $scope.ProductId = obj.ProductID;
            $scope.filterProduct = null;
        }
        $scope.Items = [];
        $scope.fnAddItem = function () {
            $scope.Items.push({
                Price: $scope.ProductPrice,
                ProductID: $scope.ProductId,
                ProductName: $scope.productName,
                Quantity: $scope.Qty,
                TotalPrice: $scope.Qty * $scope.ProductPrice,
                Description: $scope.Description
            });
            $scope.TotalPrice = 0;
            $scope.SubTotal = 0;
            $scope.Description = null;
            if ($scope.Items != null && $scope.Items != undefined)
            {
                $.each($scope.Items, function (index, item) {
                    $scope.TotalPrice += item.TotalPrice;
                    $scope.SubTotal += item.TotalPrice;
                });
            }

            /* reset value */
            $scope.ProductPrice = 0;
            $scope.ProductId = "";
            $scope.productName = "";
            $scope.Qty = 1;

        }

        $scope.deleteItem = function (item) {
            var index = $scope.Items.indexOf(item);
            $scope.Items.splice(index, 1);
            $scope.TotalPrice = 0;
            $scope.SubTotal = 0;
            if ($scope.Items != null && $scope.Items != undefined) {
                $.each($scope.Items, function (index, item) {
                    $scope.TotalPrice += item.TotalPrice;
                    $scope.SubTotal += item.TotalPrice;
                });
            }
        }

        $scope.SaveOrder = function () {
            $('.se-pre-con').show();
            var _order = {
                Items: $scope.Items,
            };
            console.log(_order);
            $http({
                method: 'POST',
                url: '@Url.Action("Create", "CMSStocks")',
                data: { Order: _order },
            })
                .then(function successCallback(response)
                {
                    $('.se-pre-con').hide();
                    var status = response.data.Status;
                    if (status == 200)
                    {
                        $window.location.href = '@Url.Action("Index","CMSStocks")';
                    }
                },
                function errorCallback(response) {
                    $('.se-pre-con').hide();
                    alert('e')
            });
        }
    }]);
</script>